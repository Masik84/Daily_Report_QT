"""temp_tables created

Revision ID: 4555ee06498c
Revises: 51c99ecf0071
Create Date: 2025-08-24 17:29:26.229314

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4555ee06498c'
down_revision: Union[str, None] = '51c99ecf0071'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('purchase_orders',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Status', sa.String(), nullable=True),
    sa.Column('Date', sa.Date(), nullable=True),
    sa.Column('Document', sa.String(), nullable=True),
    sa.Column('Supplier1', sa.String(), nullable=True),
    sa.Column('Supplier2', sa.String(), nullable=True),
    sa.Column('Order', sa.String(), nullable=True),
    sa.Column('Shipment', sa.String(), nullable=True),
    sa.Column('VAT', sa.String(), nullable=True),
    sa.Column('Currency', sa.String(), nullable=True),
    sa.Column('Qty', sa.Numeric(), nullable=True),
    sa.Column('Amount_1C', sa.Numeric(), nullable=True),
    sa.Column('Price_1C', sa.Numeric(), nullable=True),
    sa.Column('Qty_pcs', sa.Numeric(), nullable=True),
    sa.Column('Qty_lt', sa.Numeric(), nullable=True),
    sa.Column('Payment_FX', sa.Numeric(), nullable=True),
    sa.Column('Price_pcs_Curr', sa.Numeric(), nullable=True),
    sa.Column('Price_lt_Curr', sa.Numeric(), nullable=True),
    sa.Column('Price_wo_VAT_Rub', sa.Numeric(), nullable=True),
    sa.Column('Amount_wo_VAT_Rub', sa.Numeric(), nullable=True),
    sa.Column('Transport_mn', sa.Numeric(), nullable=True),
    sa.Column('Customs_fee', sa.Numeric(), nullable=True),
    sa.Column('Customs_docs', sa.Numeric(), nullable=True),
    sa.Column('Bank_fee', sa.Numeric(), nullable=True),
    sa.Column('Agency', sa.Numeric(), nullable=True),
    sa.Column('Add_Services', sa.Numeric(), nullable=True),
    sa.Column('ED', sa.Numeric(), nullable=True),
    sa.Column('Eco_fee', sa.Numeric(), nullable=True),
    sa.Column('Movement_fee', sa.Numeric(), nullable=True),
    sa.Column('Load_Unload', sa.Numeric(), nullable=True),
    sa.Column('LPC_purchase_lt', sa.Numeric(), nullable=True),
    sa.Column('LPC_purchase_pcs', sa.Numeric(), nullable=True),
    sa.Column('LPC_purchase_amount', sa.Numeric(), nullable=True),
    sa.Column('Qty_after_spec_order', sa.Numeric(), nullable=True),
    sa.Column('LPC_purchase_after_spec_order', sa.Numeric(), nullable=True),
    sa.Column('Supplier_id', sa.String(), nullable=True),
    sa.Column('Material_id', sa.String(), nullable=True),
    sa.Column('DocType_id', sa.Integer(), nullable=True),
    sa.Column('AddSupplCost_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['AddSupplCost_id'], ['add_suppl_cost.id'], name='fk_purchase_orders_addsupplcost'),
    sa.ForeignKeyConstraint(['DocType_id'], ['doc_type.id'], name='fk_purchase_orders_doctype'),
    sa.ForeignKeyConstraint(['Material_id'], ['material.Code'], name='fk_purchase_orders_material'),
    sa.ForeignKeyConstraint(['Supplier_id'], ['suppliers.id'], name='fk_purchase_orders_supplier'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_purchase_orders'))
    )
    op.create_index('idx_purchase_order_material', 'purchase_orders', ['Material_id'], unique=False)
    op.create_index('idx_purchase_order_supplier', 'purchase_orders', ['Supplier_id'], unique=False)
    op.create_index('idx_purchase_order_unique', 'purchase_orders', ['Order', 'Document', 'Date'], unique=True)
    op.create_table('temp_orders',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Bill', sa.String(), nullable=True),
    sa.Column('Bill_Date', sa.Date(), nullable=True),
    sa.Column('Status', sa.String(), nullable=True),
    sa.Column('Qty', sa.Numeric(), nullable=True),
    sa.Column('Amount_1C', sa.Numeric(), nullable=True),
    sa.Column('VAT', sa.String(), nullable=True),
    sa.Column('Currency', sa.String(), nullable=True),
    sa.Column('Recipient', sa.String(), nullable=True),
    sa.Column('Recipient_code', sa.String(), nullable=True),
    sa.Column('Reserve_date', sa.Date(), nullable=True),
    sa.Column('Reserve_days', sa.Integer(), nullable=True),
    sa.Column('Document', sa.String(), nullable=True),
    sa.Column('Date', sa.Date(), nullable=True),
    sa.Column('Comment', sa.String(), nullable=True),
    sa.Column('Days_for_Pay', sa.Numeric(), nullable=True),
    sa.Column('FX_rate_1C', sa.Numeric(), nullable=True),
    sa.Column('Plan_Pay_Day', sa.Date(), nullable=True),
    sa.Column('Post_payment', sa.Numeric(), nullable=True),
    sa.Column('Priority', sa.String(), nullable=True),
    sa.Column('Stock', sa.String(), nullable=True),
    sa.Column('Delivery_method', sa.String(), nullable=True),
    sa.Column('Pay_status', sa.String(), nullable=True),
    sa.Column('Payment_term', sa.String(), nullable=True),
    sa.Column('Sborka', sa.String(), nullable=True),
    sa.Column('Spec_Order', sa.String(), nullable=True),
    sa.Column('Purchase_doc', sa.String(), nullable=True),
    sa.Column('Purchase_date', sa.Date(), nullable=True),
    sa.Column('Order', sa.String(), nullable=True),
    sa.Column('k_Movement', sa.Numeric(), nullable=True),
    sa.Column('k_Storage', sa.Numeric(), nullable=True),
    sa.Column('k_Money', sa.Numeric(), nullable=True),
    sa.Column('Doc_type_id', sa.Integer(), nullable=True),
    sa.Column('Customer_id', sa.String(), nullable=True),
    sa.Column('Material_id', sa.String(), nullable=True),
    sa.Column('Contract_id', sa.String(), nullable=True),
    sa.Column('Supplier_id', sa.String(), nullable=True),
    sa.Column('Manager_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['Contract_id'], ['contracts.id'], name='fk_temp_orders_contract'),
    sa.ForeignKeyConstraint(['Customer_id'], ['customers.id'], name='fk_temp_orders_customer'),
    sa.ForeignKeyConstraint(['Doc_type_id'], ['doc_type.id'], name='fk_temp_orders_doctype'),
    sa.ForeignKeyConstraint(['Manager_id'], ['managers.id'], name='fk_temp_orders_managers'),
    sa.ForeignKeyConstraint(['Material_id'], ['material.Code'], name='fk_temp_orders_material'),
    sa.ForeignKeyConstraint(['Supplier_id'], ['suppliers.id'], name='fk_temp_orders_supplier'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_temp_orders'))
    )
    op.create_table('temp_purchase',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Document', sa.String(), nullable=True),
    sa.Column('Date', sa.Date(), nullable=True),
    sa.Column('Status', sa.String(), nullable=True),
    sa.Column('Doc_based', sa.String(), nullable=True),
    sa.Column('Date_Doc_based', sa.Date(), nullable=True),
    sa.Column('Stock', sa.String(), nullable=True),
    sa.Column('Currency', sa.String(), nullable=True),
    sa.Column('VAT', sa.String(), nullable=True),
    sa.Column('Country', sa.String(), nullable=True),
    sa.Column('GTD', sa.String(), nullable=True),
    sa.Column('FX_rate_1C', sa.Numeric(), nullable=True),
    sa.Column('Qty', sa.Numeric(), nullable=True),
    sa.Column('Amount_1C', sa.Numeric(), nullable=True),
    sa.Column('Doc_type_id', sa.Integer(), nullable=True),
    sa.Column('Supplier_id', sa.String(), nullable=True),
    sa.Column('Material_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['Doc_type_id'], ['doc_type.id'], name='fk_temp_purchase_doctype'),
    sa.ForeignKeyConstraint(['Material_id'], ['material.Code'], name='fk_temp_purchase_material'),
    sa.ForeignKeyConstraint(['Supplier_id'], ['suppliers.id'], name='fk_temp_purchase_supplier'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_temp_purchase'))
    )
    op.create_table('temp_sales',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('Document', sa.String(), nullable=True),
    sa.Column('Date', sa.Date(), nullable=True),
    sa.Column('Status', sa.String(), nullable=True),
    sa.Column('Bill', sa.String(), nullable=True),
    sa.Column('Bill_Date', sa.Date(), nullable=True),
    sa.Column('Doc_based', sa.String(), nullable=True),
    sa.Column('Date_Doc_based', sa.Date(), nullable=True),
    sa.Column('Stock', sa.String(), nullable=True),
    sa.Column('Delivery_method', sa.String(), nullable=True),
    sa.Column('Currency', sa.String(), nullable=True),
    sa.Column('FX_rate_1C', sa.Numeric(), nullable=True),
    sa.Column('Qty', sa.Numeric(), nullable=True),
    sa.Column('Amount_1C', sa.Numeric(), nullable=True),
    sa.Column('VAT', sa.String(), nullable=True),
    sa.Column('Recipient', sa.String(), nullable=True),
    sa.Column('Recipient_code', sa.String(), nullable=True),
    sa.Column('Days_for_Pay', sa.Numeric(), nullable=True),
    sa.Column('Plan_Delivery_Day', sa.Date(), nullable=True),
    sa.Column('Plan_Pay_Day', sa.Date(), nullable=True),
    sa.Column('Post_payment', sa.Numeric(), nullable=True),
    sa.Column('Payment_term', sa.String(), nullable=True),
    sa.Column('Priority', sa.String(), nullable=True),
    sa.Column('Comment', sa.String(), nullable=True),
    sa.Column('Sborka', sa.String(), nullable=True),
    sa.Column('Spec_Order', sa.String(), nullable=True),
    sa.Column('Purchase_doc', sa.String(), nullable=True),
    sa.Column('Purchase_date', sa.Date(), nullable=True),
    sa.Column('Order', sa.String(), nullable=True),
    sa.Column('k_Movement', sa.Numeric(), nullable=True),
    sa.Column('k_Storage', sa.Numeric(), nullable=True),
    sa.Column('k_Money', sa.Numeric(), nullable=True),
    sa.Column('Doc_type_id', sa.Integer(), nullable=True),
    sa.Column('Customer_id', sa.String(), nullable=True),
    sa.Column('Material_id', sa.String(), nullable=True),
    sa.Column('Contract_id', sa.String(), nullable=True),
    sa.Column('Supplier_id', sa.String(), nullable=True),
    sa.Column('Manager_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['Contract_id'], ['contracts.id'], name='fk_temp_sales_contract'),
    sa.ForeignKeyConstraint(['Customer_id'], ['customers.id'], name='fk_temp_sales_customer'),
    sa.ForeignKeyConstraint(['Doc_type_id'], ['doc_type.id'], name='fk_temp_sales_doctype'),
    sa.ForeignKeyConstraint(['Manager_id'], ['managers.id'], name='fk_temp_sales_managers'),
    sa.ForeignKeyConstraint(['Material_id'], ['material.Code'], name='fk_temp_sales_material'),
    sa.ForeignKeyConstraint(['Supplier_id'], ['suppliers.id'], name='fk_temp_sales_supplier'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_temp_sales'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('temp_sales')
    op.drop_table('temp_purchase')
    op.drop_table('temp_orders')
    op.drop_index('idx_purchase_order_unique', table_name='purchase_orders')
    op.drop_index('idx_purchase_order_supplier', table_name='purchase_orders')
    op.drop_index('idx_purchase_order_material', table_name='purchase_orders')
    op.drop_table('purchase_orders')
    # ### end Alembic commands ###
