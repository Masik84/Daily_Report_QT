"""create db

Revision ID: 4bfd3cbdfdda
Revises: 
Create Date: 2024-12-30 21:58:26.816417

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '4bfd3cbdfdda'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('brand',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Brand', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('doctype',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('merge', sa.String(), nullable=True),
    sa.Column('Document', sa.String(), nullable=True),
    sa.Column('Transaction', sa.String(), nullable=True),
    sa.Column('Doc_type', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sector',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Sector', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('sector', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_sector_Sector'), ['Sector'], unique=True)

    op.create_table('stl',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('STL', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('stl', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_stl_STL'), ['STL'], unique=True)

    op.create_table('supplier',
    sa.Column('id', sa.Text(), nullable=False),
    sa.Column('Supplier_Name', sa.String(), nullable=True),
    sa.Column('Imp_Loc', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('taxfee',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('merge', sa.String(), nullable=True),
    sa.Column('Year', sa.Integer(), nullable=True),
    sa.Column('Month', sa.Integer(), nullable=True),
    sa.Column('ED', sa.Numeric(), nullable=True),
    sa.Column('Cust_docs', sa.Numeric(), nullable=True),
    sa.Column('Bank_fee', sa.Numeric(), nullable=True),
    sa.Column('Eco_Fee', sa.Numeric(), nullable=True),
    sa.Column('Eco_norm', sa.Numeric(), nullable=True),
    sa.Column('Moving', sa.Numeric(), nullable=True),
    sa.Column('Storing', sa.Numeric(), nullable=True),
    sa.Column('Money', sa.Numeric(), nullable=True),
    sa.Column('Add_money', sa.Numeric(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('teamlead',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('TeamLead', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('TeamLead')
    )
    op.create_table('comp_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('merge', sa.String(), nullable=True),
    sa.Column('Year', sa.Integer(), nullable=True),
    sa.Column('Quarter', sa.Integer(), nullable=True),
    sa.Column('Month', sa.Integer(), nullable=True),
    sa.Column('Week_of_Year', sa.Integer(), nullable=True),
    sa.Column('TeamLead_id', sa.Integer(), nullable=True),
    sa.Column('Prod_cat', sa.String(), nullable=True),
    sa.Column('Volume_Target_total', sa.Numeric(), nullable=True),
    sa.Column('Revenue_Target_total', sa.Numeric(), nullable=True),
    sa.Column('Margin_Target_total', sa.Numeric(), nullable=True),
    sa.ForeignKeyConstraint(['TeamLead_id'], ['teamlead.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('comp_plans', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_comp_plans_TeamLead_id'), ['TeamLead_id'], unique=False)

    op.create_table('manager',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('AM', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('Report', sa.String(), nullable=True),
    sa.Column('STL_id', sa.Integer(), nullable=True),
    sa.Column('TeamLead_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['STL_id'], ['stl.id'], ),
    sa.ForeignKeyConstraint(['TeamLead_id'], ['teamlead.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('manager', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_manager_AM'), ['AM'], unique=True)
        batch_op.create_index(batch_op.f('ix_manager_STL_id'), ['STL_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_manager_TeamLead_id'), ['TeamLead_id'], unique=False)

    op.create_table('manager_prev',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('AM_prev', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('Report', sa.String(), nullable=True),
    sa.Column('STL_id', sa.Integer(), nullable=True),
    sa.Column('TeamLead_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['STL_id'], ['stl.id'], ),
    sa.ForeignKeyConstraint(['TeamLead_id'], ['teamlead.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('manager_prev', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_manager_prev_AM_prev'), ['AM_prev'], unique=True)
        batch_op.create_index(batch_op.f('ix_manager_prev_STL_id'), ['STL_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_manager_prev_TeamLead_id'), ['TeamLead_id'], unique=False)

    op.create_table('prod_name',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Product_Name', sa.String(), nullable=True),
    sa.Column('Type', sa.String(), nullable=True),
    sa.Column('Category', sa.String(), nullable=True),
    sa.Column('Family', sa.String(), nullable=True),
    sa.Column('Brand_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['Brand_id'], ['brand.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('prod_name', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_prod_name_Brand_id'), ['Brand_id'], unique=False)

    op.create_table('holding',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Holding', sa.String(), nullable=False),
    sa.Column('AM_id', sa.Integer(), nullable=True),
    sa.Column('AM_prev_id', sa.Integer(), nullable=True),
    sa.Column('Sector_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['AM_id'], ['manager.id'], ),
    sa.ForeignKeyConstraint(['AM_prev_id'], ['manager_prev.id'], ),
    sa.ForeignKeyConstraint(['Sector_id'], ['sector.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('holding', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_holding_AM_id'), ['AM_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_holding_AM_prev_id'), ['AM_prev_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_holding_Holding'), ['Holding'], unique=True)
        batch_op.create_index(batch_op.f('ix_holding_Sector_id'), ['Sector_id'], unique=False)

    op.create_table('hyundai',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('HYUNDAI_id', sa.String(), nullable=True),
    sa.Column('Hyu_code', sa.String(), nullable=True),
    sa.Column('Dealer_Name', sa.String(), nullable=True),
    sa.Column('City', sa.String(), nullable=True),
    sa.Column('INN', sa.String(), nullable=True),
    sa.Column('AM_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['AM_id'], ['manager.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('hyundai', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_hyundai_AM_id'), ['AM_id'], unique=False)

    op.create_table('material',
    sa.Column('id', sa.Text(), nullable=False),
    sa.Column('prod_art', sa.String(), nullable=True),
    sa.Column('prod_art_for_price', sa.String(), nullable=True),
    sa.Column('Material_Name', sa.String(), nullable=False),
    sa.Column('ProdName_id', sa.Integer(), nullable=True),
    sa.Column('UoM', sa.String(), nullable=True),
    sa.Column('UoM_1C', sa.String(), nullable=True),
    sa.Column('Pack_type', sa.String(), nullable=True),
    sa.Column('Pack_for_name', sa.Numeric(), nullable=True),
    sa.Column('Pack', sa.Numeric(), nullable=True),
    sa.Column('Pack_qty', sa.Numeric(), nullable=True),
    sa.Column('ED_type', sa.String(), nullable=True),
    sa.Column('Ecofee_type', sa.String(), nullable=True),
    sa.Column('Density', sa.Numeric(), nullable=True),
    sa.Column('Net_Weight', sa.Numeric(), nullable=True),
    sa.Column('Pack_weight', sa.Numeric(), nullable=True),
    sa.Column('Gross_weight', sa.Numeric(), nullable=True),
    sa.Column('TNVED', sa.String(), nullable=True),
    sa.Column('Cntr_of_origin', sa.String(), nullable=True),
    sa.Column('Stock_strategy', sa.String(), nullable=True),
    sa.Column('Status', sa.String(), nullable=True),
    sa.Column('Full_name', sa.String(), nullable=True),
    sa.Column('Material_Name_engl', sa.String(), nullable=True),
    sa.Column('Comment', sa.String(), nullable=True),
    sa.Column('ABC', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['ProdName_id'], ['prod_name.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('material', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_material_ProdName_id'), ['ProdName_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_material_id'), ['id'], unique=True)
        batch_op.create_index(batch_op.f('ix_material_prod_art'), ['prod_art'], unique=False)
        batch_op.create_index(batch_op.f('ix_material_prod_art_for_price'), ['prod_art_for_price'], unique=False)

    op.create_table('cust_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('merge', sa.String(), nullable=True),
    sa.Column('Year', sa.Integer(), nullable=True),
    sa.Column('Quarter', sa.Integer(), nullable=True),
    sa.Column('Month', sa.Integer(), nullable=True),
    sa.Column('Holding_id', sa.Integer(), nullable=True),
    sa.Column('Volume_target', sa.Numeric(), nullable=True),
    sa.Column('Margin_target', sa.Numeric(), nullable=True),
    sa.ForeignKeyConstraint(['Holding_id'], ['holding.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('cust_plans', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_cust_plans_Holding_id'), ['Holding_id'], unique=False)

    op.create_table('сustomer',
    sa.Column('id', sa.Text(), nullable=False),
    sa.Column('Customer_Name', sa.String(), nullable=True),
    sa.Column('INN', sa.String(), nullable=True),
    sa.Column('Holding_id', sa.Integer(), nullable=True),
    sa.Column('Status', sa.String(), nullable=True),
    sa.Column('PriceList', sa.String(), nullable=True),
    sa.Column('Delivery', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['Holding_id'], ['holding.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('сustomer', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_сustomer_Holding_id'), ['Holding_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('сustomer', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_сustomer_Holding_id'))

    op.drop_table('сustomer')
    with op.batch_alter_table('cust_plans', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_cust_plans_Holding_id'))

    op.drop_table('cust_plans')
    with op.batch_alter_table('material', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_material_prod_art_for_price'))
        batch_op.drop_index(batch_op.f('ix_material_prod_art'))
        batch_op.drop_index(batch_op.f('ix_material_id'))
        batch_op.drop_index(batch_op.f('ix_material_ProdName_id'))

    op.drop_table('material')
    with op.batch_alter_table('hyundai', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_hyundai_AM_id'))

    op.drop_table('hyundai')
    with op.batch_alter_table('holding', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_holding_Sector_id'))
        batch_op.drop_index(batch_op.f('ix_holding_Holding'))
        batch_op.drop_index(batch_op.f('ix_holding_AM_prev_id'))
        batch_op.drop_index(batch_op.f('ix_holding_AM_id'))

    op.drop_table('holding')
    with op.batch_alter_table('prod_name', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_prod_name_Brand_id'))

    op.drop_table('prod_name')
    with op.batch_alter_table('manager_prev', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_manager_prev_TeamLead_id'))
        batch_op.drop_index(batch_op.f('ix_manager_prev_STL_id'))
        batch_op.drop_index(batch_op.f('ix_manager_prev_AM_prev'))

    op.drop_table('manager_prev')
    with op.batch_alter_table('manager', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_manager_TeamLead_id'))
        batch_op.drop_index(batch_op.f('ix_manager_STL_id'))
        batch_op.drop_index(batch_op.f('ix_manager_AM'))

    op.drop_table('manager')
    with op.batch_alter_table('comp_plans', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_comp_plans_TeamLead_id'))

    op.drop_table('comp_plans')
    op.drop_table('teamlead')
    op.drop_table('taxfee')
    op.drop_table('supplier')
    with op.batch_alter_table('stl', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_stl_STL'))

    op.drop_table('stl')
    with op.batch_alter_table('sector', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_sector_Sector'))

    op.drop_table('sector')
    op.drop_table('doctype')
    op.drop_table('brand')
    # ### end Alembic commands ###
