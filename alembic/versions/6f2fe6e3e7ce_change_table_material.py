"""change table Material

Revision ID: 6f2fe6e3e7ce
Revises: ecdcd4ea1deb
Create Date: 2025-07-26 19:03:43.295981

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6f2fe6e3e7ce'
down_revision: Union[str, None] = 'ecdcd4ea1deb'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tnved',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tnved')),
    sa.UniqueConstraint('code', name=op.f('uq_tnved_code'))
    )
    op.create_table('product_group',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('Product_name', sa.String(), nullable=True),
    sa.Column('TNVED_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['TNVED_id'], ['tnved.id'], name=op.f('fk_product_group_TNVED_id_tnved')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product_group'))
    )
    op.create_table('product_names',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Name', sa.String(), nullable=False),
    sa.Column('Product_Group_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['Product_Group_id'], ['product_group.id'], name=op.f('fk_product_names_Product_Group_id_product_group')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product_names')),
    sa.UniqueConstraint('Name', name=op.f('uq_product_names_Name'))
    )
    op.add_column('abc_cat', sa.Column('product_name_id', sa.Integer(), nullable=True))
    op.drop_constraint('fk_abc_material', 'abc_cat', type_='foreignkey')
    op.create_foreign_key(op.f('fk_abc_cat_product_name_id_product_names'), 'abc_cat', 'product_names', ['product_name_id'], ['id'])
    op.drop_column('abc_cat', 'material_code')
    op.drop_constraint('fk_company_plans_ABC_category_id_abc_cat', 'company_plans', type_='foreignkey')
    op.drop_column('company_plans', 'ABC_category_id')
    op.add_column('customs_rate', sa.Column('TNVED_id', sa.Integer(), nullable=True))
    op.create_foreign_key(op.f('fk_customs_rate_TNVED_id_tnved'), 'customs_rate', 'tnved', ['TNVED_id'], ['id'])
    op.drop_column('customs_rate', 'TNVED')
    op.add_column('ecofee_amount', sa.Column('TNVED_id', sa.Integer(), nullable=True))
    op.create_foreign_key(op.f('fk_ecofee_amount_TNVED_id_tnved'), 'ecofee_amount', 'tnved', ['TNVED_id'], ['id'])
    op.drop_column('ecofee_amount', 'TNVED')
    op.add_column('ecofee_standard', sa.Column('TNVED_id', sa.Integer(), nullable=True))
    op.create_foreign_key(op.f('fk_ecofee_standard_TNVED_id_tnved'), 'ecofee_standard', 'tnved', ['TNVED_id'], ['id'])
    op.drop_column('ecofee_standard', 'TNVED')
    op.add_column('material', sa.Column('Product_Names_id', sa.Integer(), nullable=True))
    op.drop_index('ix_material_Material_Name', table_name='material')
    op.create_foreign_key(op.f('fk_material_Product_Names_id_product_names'), 'material', 'product_names', ['Product_Names_id'], ['id'])
    op.drop_column('material', 'TNVED')
    op.drop_column('material', 'Product_name')
    op.drop_column('material', 'Material_Name')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('material', sa.Column('Material_Name', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('material', sa.Column('Product_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('material', sa.Column('TNVED', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(op.f('fk_material_Product_Names_id_product_names'), 'material', type_='foreignkey')
    op.create_index('ix_material_Material_Name', 'material', ['Material_Name'], unique=False)
    op.drop_column('material', 'Product_Names_id')
    op.add_column('ecofee_standard', sa.Column('TNVED', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(op.f('fk_ecofee_standard_TNVED_id_tnved'), 'ecofee_standard', type_='foreignkey')
    op.drop_column('ecofee_standard', 'TNVED_id')
    op.add_column('ecofee_amount', sa.Column('TNVED', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(op.f('fk_ecofee_amount_TNVED_id_tnved'), 'ecofee_amount', type_='foreignkey')
    op.drop_column('ecofee_amount', 'TNVED_id')
    op.add_column('customs_rate', sa.Column('TNVED', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(op.f('fk_customs_rate_TNVED_id_tnved'), 'customs_rate', type_='foreignkey')
    op.drop_column('customs_rate', 'TNVED_id')
    op.add_column('company_plans', sa.Column('ABC_category_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('fk_company_plans_ABC_category_id_abc_cat', 'company_plans', 'abc_cat', ['ABC_category_id'], ['id'])
    op.add_column('abc_cat', sa.Column('material_code', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(op.f('fk_abc_cat_product_name_id_product_names'), 'abc_cat', type_='foreignkey')
    op.create_foreign_key('fk_abc_material', 'abc_cat', 'material', ['material_code'], ['Code'])
    op.drop_column('abc_cat', 'product_name_id')
    op.drop_table('product_names')
    op.drop_table('product_group')
    op.drop_table('tnved')
    # ### end Alembic commands ###
