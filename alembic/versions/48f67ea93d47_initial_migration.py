"""Initial migration

Revision ID: 48f67ea93d47
Revises: 
Create Date: 2025-07-22 10:42:50.455236

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '48f67ea93d47'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('customs_rate',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('merge', sa.String(), nullable=True),
    sa.Column('TNVED', sa.String(), nullable=True),
    sa.Column('Cust_rate', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('merge')
    )
    op.create_table('doc_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('merge', sa.String(), nullable=True),
    sa.Column('Document', sa.String(), nullable=True),
    sa.Column('Transaction', sa.String(), nullable=True),
    sa.Column('Doc_type', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ecofee_amount',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('merge', sa.String(), nullable=True),
    sa.Column('TNVED', sa.String(), nullable=True),
    sa.Column('Year', sa.Integer(), nullable=True),
    sa.Column('ECO_amount', sa.Numeric(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('merge')
    )
    op.create_table('ecofee_standard',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('merge', sa.String(), nullable=True),
    sa.Column('TNVED', sa.String(), nullable=True),
    sa.Column('Year', sa.Integer(), nullable=True),
    sa.Column('ECO_standard', sa.Numeric(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('merge')
    )
    op.create_table('holdings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Holding_name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('Holding_name')
    )
    op.create_table('material',
    sa.Column('Code', sa.String(), nullable=False),
    sa.Column('Article', sa.String(), nullable=True),
    sa.Column('Material_Name', sa.String(), nullable=False),
    sa.Column('Full_name', sa.String(), nullable=True),
    sa.Column('Brand', sa.String(), nullable=True),
    sa.Column('Family', sa.String(), nullable=True),
    sa.Column('Product_name', sa.String(), nullable=True),
    sa.Column('Product_type', sa.String(), nullable=True),
    sa.Column('UoM', sa.String(), nullable=True),
    sa.Column('Report_UoM', sa.String(), nullable=True),
    sa.Column('Package_type', sa.String(), nullable=True),
    sa.Column('Items_per_Package', sa.Integer(), nullable=True),
    sa.Column('Items_per_Set', sa.Integer(), nullable=True),
    sa.Column('Package_Volume', sa.Numeric(), nullable=True),
    sa.Column('Net_weight', sa.Numeric(), nullable=True),
    sa.Column('Gross_weight', sa.Numeric(), nullable=True),
    sa.Column('Density', sa.Numeric(), nullable=True),
    sa.Column('TNVED', sa.String(), nullable=True),
    sa.Column('Excise', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('Code')
    )
    with op.batch_alter_table('material', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_material_Material_Name'), ['Material_Name'], unique=False)

    op.create_table('sectors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Sector_name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('Sector_name')
    )
    op.create_table('stls',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('STL_name', sa.String(), nullable=True),
    sa.Column('Email', sa.String(), nullable=True),
    sa.Column('Report_link', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('supplier',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('Supplier_Name', sa.String(), nullable=True),
    sa.Column('Imp_Loc', sa.String(), nullable=True),
    sa.Column('Customs', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('taxfee',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Year', sa.Integer(), nullable=True),
    sa.Column('Month', sa.Integer(), nullable=True),
    sa.Column('Excise', sa.Numeric(), nullable=True),
    sa.Column('Customs_clearance', sa.Numeric(), nullable=True),
    sa.Column('Bank_commission', sa.Numeric(), nullable=True),
    sa.Column('Transportation', sa.Numeric(), nullable=True),
    sa.Column('Storage', sa.Numeric(), nullable=True),
    sa.Column('Money_cost', sa.Numeric(), nullable=True),
    sa.Column('Additional_money_percent', sa.Numeric(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('Year', 'Month', name='uq_year_month')
    )
    op.create_table('team_leads',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('TeamLead_name', sa.String(), nullable=True),
    sa.Column('Email', sa.String(), nullable=True),
    sa.Column('Has_report', sa.String(), nullable=True),
    sa.Column('Report_link', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('abc_cat',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Product_name', sa.String(), nullable=True),
    sa.Column('Start_date', sa.Date(), nullable=True),
    sa.Column('End_date', sa.Date(), nullable=True),
    sa.Column('ABC_category', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['Product_name'], ['material.Material_Name'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('customers',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('Customer_name', sa.String(), nullable=True),
    sa.Column('INN', sa.String(), nullable=True),
    sa.Column('Price_type', sa.String(), nullable=True),
    sa.Column('Sector_id', sa.String(), nullable=True),
    sa.Column('Holding_Id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['Holding_Id'], ['holdings.id'], ),
    sa.ForeignKeyConstraint(['Sector_id'], ['sectors.Sector_name'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('managers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Manager_name', sa.String(), nullable=True),
    sa.Column('Email', sa.String(), nullable=True),
    sa.Column('AM_1C_Name', sa.String(), nullable=True),
    sa.Column('Has_report', sa.String(), nullable=True),
    sa.Column('Report_link', sa.String(), nullable=True),
    sa.Column('STL_id', sa.Integer(), nullable=True),
    sa.Column('TeamLead_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['STL_id'], ['stls.id'], ),
    sa.ForeignKeyConstraint(['TeamLead_id'], ['team_leads.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contracts',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('Contract', sa.String(), nullable=True),
    sa.Column('Contract_Type', sa.String(), nullable=True),
    sa.Column('Price_Type', sa.String(), nullable=True),
    sa.Column('Payment_Condition', sa.String(), nullable=True),
    sa.Column('Customer_id', sa.String(), nullable=True),
    sa.Column('Manager_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['Customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['Manager_id'], ['managers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hyundai_dealers',
    sa.Column('Id', sa.Integer(), nullable=False),
    sa.Column('Dealer_code', sa.String(), nullable=True),
    sa.Column('Hyundai_code', sa.String(), nullable=False),
    sa.Column('Name', sa.String(), nullable=True),
    sa.Column('City', sa.String(), nullable=True),
    sa.Column('INN', sa.String(), nullable=True),
    sa.Column('Manager_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['Manager_id'], ['managers.id'], ),
    sa.PrimaryKeyConstraint('Id'),
    sa.UniqueConstraint('Dealer_code'),
    sa.UniqueConstraint('Hyundai_code')
    )
    with op.batch_alter_table('hyundai_dealers', schema=None) as batch_op:
        batch_op.create_index('idx_dealer_code_unique', ['Dealer_code'], unique=True)
        batch_op.create_index('idx_hyundai_code_unique', ['Hyundai_code'], unique=True)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('hyundai_dealers', schema=None) as batch_op:
        batch_op.drop_index('idx_hyundai_code_unique')
        batch_op.drop_index('idx_dealer_code_unique')

    op.drop_table('hyundai_dealers')
    op.drop_table('contracts')
    op.drop_table('managers')
    op.drop_table('customers')
    op.drop_table('abc_cat')
    op.drop_table('team_leads')
    op.drop_table('taxfee')
    op.drop_table('supplier')
    op.drop_table('stls')
    op.drop_table('sectors')
    with op.batch_alter_table('material', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_material_Material_Name'))

    op.drop_table('material')
    op.drop_table('holdings')
    op.drop_table('ecofee_standard')
    op.drop_table('ecofee_amount')
    op.drop_table('doc_type')
    op.drop_table('customs_rate')
    # ### end Alembic commands ###
