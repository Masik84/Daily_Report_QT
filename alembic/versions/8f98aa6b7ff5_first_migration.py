"""first_migration

Revision ID: 8f98aa6b7ff5
Revises: 
Create Date: 2025-07-31 10:35:04.187212

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8f98aa6b7ff5'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('abc_list',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ABC_category', sa.String(length=10), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_abc_list')),
    sa.UniqueConstraint('ABC_category', name=op.f('uq_abc_list_ABC_category'))
    )
    op.create_table('doc_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('merge', sa.String(), nullable=True),
    sa.Column('Document', sa.String(), nullable=True),
    sa.Column('Transaction', sa.String(), nullable=True),
    sa.Column('Doc_type', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_doc_type'))
    )
    op.create_table('holdings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Holding_name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_holdings')),
    sa.UniqueConstraint('Holding_name', name=op.f('uq_holdings_Holding_name'))
    )
    op.create_table('quarters',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Quarter', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_quarters'))
    )
    op.create_table('sectors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Sector_name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_sectors')),
    sa.UniqueConstraint('Sector_name', name=op.f('uq_sectors_Sector_name'))
    )
    op.create_table('stls',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('STL_name', sa.String(), nullable=True),
    sa.Column('Email', sa.String(), nullable=True),
    sa.Column('Report_link', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_stls'))
    )
    op.create_table('supplier',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('Supplier_Name', sa.String(), nullable=True),
    sa.Column('Imp_Loc', sa.String(), nullable=True),
    sa.Column('Customs', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_supplier'))
    )
    op.create_table('team_leads',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('TeamLead_name', sa.String(), nullable=True),
    sa.Column('Email', sa.String(), nullable=True),
    sa.Column('Has_report', sa.String(), nullable=True),
    sa.Column('Report_link', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_team_leads'))
    )
    op.create_table('tnved',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tnved')),
    sa.UniqueConstraint('code', name=op.f('uq_tnved_code'))
    )
    op.create_table('weeks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Week_of_Year', sa.Integer(), nullable=False),
    sa.Column('Week_of_Month', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_weeks'))
    )
    op.create_table('years',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Year', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_years')),
    sa.UniqueConstraint('Year', name=op.f('uq_years_Year'))
    )
    op.create_table('customers',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('Customer_name', sa.String(), nullable=True),
    sa.Column('INN', sa.String(), nullable=True),
    sa.Column('Price_type', sa.String(), nullable=True),
    sa.Column('Sector_id', sa.Integer(), nullable=True),
    sa.Column('Holding_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['Holding_id'], ['holdings.id'], name='fk_customer_holding'),
    sa.ForeignKeyConstraint(['Sector_id'], ['sectors.id'], name='fk_customer_sector'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_customers'))
    )
    op.create_table('customs_rate',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('TNVED_id', sa.Integer(), nullable=True),
    sa.Column('Cust_rate', sa.Numeric(precision=5, scale=4), nullable=True),
    sa.ForeignKeyConstraint(['TNVED_id'], ['tnved.id'], name='fk_customs_rate_tnved'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_customs_rate'))
    )
    op.create_table('ecofee_amount',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('merge', sa.String(), nullable=True),
    sa.Column('TNVED_id', sa.Integer(), nullable=True),
    sa.Column('year_id', sa.Integer(), nullable=True),
    sa.Column('ECO_amount', sa.Numeric(), nullable=True),
    sa.ForeignKeyConstraint(['TNVED_id'], ['tnved.id'], name='fk_ecofee_amount_tnved'),
    sa.ForeignKeyConstraint(['year_id'], ['years.id'], name='fk_ecofee_amount_year'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ecofee_amount')),
    sa.UniqueConstraint('merge', name=op.f('uq_ecofee_amount_merge'))
    )
    op.create_table('ecofee_standard',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('merge', sa.String(), nullable=True),
    sa.Column('TNVED_id', sa.Integer(), nullable=True),
    sa.Column('year_id', sa.Integer(), nullable=True),
    sa.Column('ECO_standard', sa.Numeric(), nullable=True),
    sa.ForeignKeyConstraint(['TNVED_id'], ['tnved.id'], name='fk_ecofee_standard_tnved'),
    sa.ForeignKeyConstraint(['year_id'], ['years.id'], name='fk_ecofee_standard_year'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ecofee_standard')),
    sa.UniqueConstraint('merge', name=op.f('uq_ecofee_standard_merge'))
    )
    op.create_table('managers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Manager_name', sa.String(), nullable=True),
    sa.Column('Email', sa.String(), nullable=True),
    sa.Column('AM_1C_Name', sa.String(), nullable=True),
    sa.Column('Has_report', sa.String(), nullable=True),
    sa.Column('Report_link', sa.String(), nullable=True),
    sa.Column('STL_id', sa.Integer(), nullable=True),
    sa.Column('TeamLead_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['STL_id'], ['stls.id'], name='fk_manager_stl'),
    sa.ForeignKeyConstraint(['TeamLead_id'], ['team_leads.id'], name='fk_manager_teamlead'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_managers'))
    )
    op.create_table('months',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Month', sa.Integer(), nullable=False),
    sa.Column('Quarter_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['Quarter_id'], ['quarters.id'], name='fk_months_Quarter_id_quarters'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_months'))
    )
    op.create_table('product_group',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('Product_name', sa.String(), nullable=True),
    sa.Column('TNVED_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['TNVED_id'], ['tnved.id'], name='fk_product_group_tnved'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product_group'))
    )
    op.create_table('calendar',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Day', sa.Date(), nullable=False),
    sa.Column('Year_id', sa.Integer(), nullable=False),
    sa.Column('Quarter_id', sa.Integer(), nullable=False),
    sa.Column('Month_id', sa.Integer(), nullable=False),
    sa.Column('Week_id', sa.Integer(), nullable=False),
    sa.Column('NETWORKDAYS', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['Month_id'], ['months.id'], name='fk_calendar_Month_id_months'),
    sa.ForeignKeyConstraint(['Quarter_id'], ['quarters.id'], name='fk_calendar_Quarter_id_quarters'),
    sa.ForeignKeyConstraint(['Week_id'], ['weeks.id'], name='fk_calendar_Week_id_weeks'),
    sa.ForeignKeyConstraint(['Year_id'], ['years.id'], name='fk_calendar_Year_id_years'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_calendar')),
    sa.UniqueConstraint('Day', name=op.f('uq_calendar_Day'))
    )
    op.create_table('company_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Work_Days', sa.Integer(), nullable=True),
    sa.Column('Month_vol', sa.Numeric(), nullable=True),
    sa.Column('Month_Revenue', sa.Numeric(), nullable=True),
    sa.Column('Month_Margin', sa.Numeric(), nullable=True),
    sa.Column('Volume_Target_total', sa.Numeric(), nullable=True),
    sa.Column('Revenue_Target_total', sa.Numeric(), nullable=True),
    sa.Column('Margin_Target_total', sa.Numeric(), nullable=True),
    sa.Column('Status', sa.String(), nullable=True),
    sa.Column('Year_id', sa.Integer(), nullable=True),
    sa.Column('Month_id', sa.Integer(), nullable=True),
    sa.Column('Week_id', sa.Integer(), nullable=True),
    sa.Column('TeamLead_id', sa.Integer(), nullable=True),
    sa.Column('ABC_category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['ABC_category_id'], ['abc_list.id'], name='fk_company_plans_ABC_category_id_abc_list'),
    sa.ForeignKeyConstraint(['Month_id'], ['months.id'], name='fk_company_plans_Month_id_months'),
    sa.ForeignKeyConstraint(['TeamLead_id'], ['team_leads.id'], name='fk_company_plans_TeamLead_id_team_leads'),
    sa.ForeignKeyConstraint(['Week_id'], ['weeks.id'], name='fk_company_plans_Week_id_weeks'),
    sa.ForeignKeyConstraint(['Year_id'], ['years.id'], name='fk_company_plans_Year_id_years'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_company_plans'))
    )
    op.create_table('contracts',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('Contract', sa.String(), nullable=True),
    sa.Column('Contract_Type', sa.String(), nullable=True),
    sa.Column('Price_Type', sa.String(), nullable=True),
    sa.Column('Payment_Condition', sa.String(), nullable=True),
    sa.Column('Customer_id', sa.String(), nullable=True),
    sa.Column('Manager_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['Customer_id'], ['customers.id'], name='fk_contract_customer'),
    sa.ForeignKeyConstraint(['Manager_id'], ['managers.id'], name='fk_contract_manager'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_contracts'))
    )
    op.create_table('customer_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Volume_Target_cust', sa.Numeric(), nullable=True),
    sa.Column('Revenue_Target_cust', sa.Numeric(), nullable=True),
    sa.Column('Margin_C3_Target_cust', sa.Numeric(), nullable=True),
    sa.Column('Margin_C4_Target_cust', sa.Numeric(), nullable=True),
    sa.Column('Status', sa.String(), nullable=True),
    sa.Column('Year_id', sa.Integer(), nullable=True),
    sa.Column('Month_id', sa.Integer(), nullable=True),
    sa.Column('Week_id', sa.Integer(), nullable=True),
    sa.Column('Holding_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['Holding_id'], ['holdings.id'], name='fk_customer_plans_Holding_id_holdings'),
    sa.ForeignKeyConstraint(['Month_id'], ['months.id'], name='fk_customer_plans_Month_id_months'),
    sa.ForeignKeyConstraint(['Week_id'], ['weeks.id'], name='fk_customer_plans_Week_id_weeks'),
    sa.ForeignKeyConstraint(['Year_id'], ['years.id'], name='fk_customer_plans_Year_id_years'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_customer_plans'))
    )
    op.create_table('hyundai_dealers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Dealer_code', sa.String(), nullable=True),
    sa.Column('Hyundai_code', sa.String(), nullable=False),
    sa.Column('Name', sa.String(), nullable=True),
    sa.Column('City', sa.String(), nullable=True),
    sa.Column('INN', sa.String(), nullable=True),
    sa.Column('Manager_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['Manager_id'], ['managers.id'], name='fk_dealer_manager'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_hyundai_dealers')),
    sa.UniqueConstraint('Dealer_code', name=op.f('uq_hyundai_dealers_Dealer_code')),
    sa.UniqueConstraint('Hyundai_code', name=op.f('uq_hyundai_dealers_Hyundai_code'))
    )
    op.create_index('idx_dealer_code_unique', 'hyundai_dealers', ['Dealer_code'], unique=True)
    op.create_index('idx_hyundai_code_unique', 'hyundai_dealers', ['Hyundai_code'], unique=True)
    op.create_table('product_names',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('Product_name', sa.String(), nullable=False),
    sa.Column('Product_Group_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['Product_Group_id'], ['product_group.id'], name='fk_product_names_product_group'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product_names')),
    sa.UniqueConstraint('Product_name', name=op.f('uq_product_names_Product_name'))
    )
    op.create_table('taxfee',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('year_id', sa.Integer(), nullable=True),
    sa.Column('month_id', sa.Integer(), nullable=True),
    sa.Column('Excise', sa.Numeric(), nullable=True),
    sa.Column('Customs_clearance', sa.Numeric(), nullable=True),
    sa.Column('Bank_commission', sa.Numeric(), nullable=True),
    sa.Column('Transportation', sa.Numeric(), nullable=True),
    sa.Column('Storage', sa.Numeric(), nullable=True),
    sa.Column('Money_cost', sa.Numeric(), nullable=True),
    sa.Column('Additional_money_percent', sa.Numeric(), nullable=True),
    sa.ForeignKeyConstraint(['month_id'], ['months.id'], name='fk_fees_month'),
    sa.ForeignKeyConstraint(['year_id'], ['years.id'], name='fk_fees_year'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_taxfee')),
    sa.UniqueConstraint('year_id', 'month_id', name='uq_year_month')
    )
    op.create_table('abc_cat',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_name_id', sa.Integer(), nullable=True),
    sa.Column('abc_list_id', sa.Integer(), nullable=True),
    sa.Column('Start_date', sa.Date(), nullable=True),
    sa.Column('End_date', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['abc_list_id'], ['abc_list.id'], name='fk_abc_cat_abc_list'),
    sa.ForeignKeyConstraint(['product_name_id'], ['product_names.id'], name='fk_abc_cat_product_names'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_abc_cat'))
    )
    op.create_table('material',
    sa.Column('Code', sa.String(), nullable=False),
    sa.Column('Article', sa.String(), nullable=True),
    sa.Column('Full_name', sa.String(), nullable=True),
    sa.Column('Brand', sa.String(), nullable=True),
    sa.Column('Family', sa.String(), nullable=True),
    sa.Column('Product_type', sa.String(), nullable=True),
    sa.Column('UoM', sa.String(), nullable=True),
    sa.Column('Report_UoM', sa.String(), nullable=True),
    sa.Column('Package_type', sa.String(), nullable=True),
    sa.Column('Items_per_Package', sa.Integer(), nullable=True),
    sa.Column('Items_per_Set', sa.Integer(), nullable=True),
    sa.Column('Package_Volume', sa.Numeric(), nullable=True),
    sa.Column('Net_weight', sa.Numeric(), nullable=True),
    sa.Column('Gross_weight', sa.Numeric(), nullable=True),
    sa.Column('Density', sa.Numeric(), nullable=True),
    sa.Column('Excise', sa.String(), nullable=True),
    sa.Column('Product_Names_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['Product_Names_id'], ['product_names.id'], name='fk_materials_product_names'),
    sa.PrimaryKeyConstraint('Code', name=op.f('pk_material'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('material')
    op.drop_table('abc_cat')
    op.drop_table('taxfee')
    op.drop_table('product_names')
    op.drop_index('idx_hyundai_code_unique', table_name='hyundai_dealers')
    op.drop_index('idx_dealer_code_unique', table_name='hyundai_dealers')
    op.drop_table('hyundai_dealers')
    op.drop_table('customer_plans')
    op.drop_table('contracts')
    op.drop_table('company_plans')
    op.drop_table('calendar')
    op.drop_table('product_group')
    op.drop_table('months')
    op.drop_table('managers')
    op.drop_table('ecofee_standard')
    op.drop_table('ecofee_amount')
    op.drop_table('customs_rate')
    op.drop_table('customers')
    op.drop_table('years')
    op.drop_table('weeks')
    op.drop_table('tnved')
    op.drop_table('team_leads')
    op.drop_table('supplier')
    op.drop_table('stls')
    op.drop_table('sectors')
    op.drop_table('quarters')
    op.drop_table('holdings')
    op.drop_table('doc_type')
    op.drop_table('abc_list')
    # ### end Alembic commands ###
